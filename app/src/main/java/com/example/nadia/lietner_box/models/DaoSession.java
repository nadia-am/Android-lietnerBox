package com.example.nadia.lietner_box.models;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.example.nadia.lietner_box.models.group;
import com.example.nadia.lietner_box.models.card;
import com.example.nadia.lietner_box.models.setting;
import com.example.nadia.lietner_box.models.purchase;

import com.example.nadia.lietner_box.models.groupDao;
import com.example.nadia.lietner_box.models.cardDao;
import com.example.nadia.lietner_box.models.settingDao;
import com.example.nadia.lietner_box.models.purchaseDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig groupDaoConfig;
    private final DaoConfig cardDaoConfig;
    private final DaoConfig settingDaoConfig;
    private final DaoConfig purchaseDaoConfig;

    private final groupDao groupDao;
    private final cardDao cardDao;
    private final settingDao settingDao;
    private final purchaseDao purchaseDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        groupDaoConfig = daoConfigMap.get(groupDao.class).clone();
        groupDaoConfig.initIdentityScope(type);

        cardDaoConfig = daoConfigMap.get(cardDao.class).clone();
        cardDaoConfig.initIdentityScope(type);

        settingDaoConfig = daoConfigMap.get(settingDao.class).clone();
        settingDaoConfig.initIdentityScope(type);

        purchaseDaoConfig = daoConfigMap.get(purchaseDao.class).clone();
        purchaseDaoConfig.initIdentityScope(type);

        groupDao = new groupDao(groupDaoConfig, this);
        cardDao = new cardDao(cardDaoConfig, this);
        settingDao = new settingDao(settingDaoConfig, this);
        purchaseDao = new purchaseDao(purchaseDaoConfig, this);

        registerDao(group.class, groupDao);
        registerDao(card.class, cardDao);
        registerDao(setting.class, settingDao);
        registerDao(purchase.class, purchaseDao);
    }
    
    public void clear() {
        groupDaoConfig.getIdentityScope().clear();
        cardDaoConfig.getIdentityScope().clear();
        settingDaoConfig.getIdentityScope().clear();
        purchaseDaoConfig.getIdentityScope().clear();
    }

    public groupDao getGroupDao() {
        return groupDao;
    }

    public cardDao getCardDao() {
        return cardDao;
    }

    public settingDao getSettingDao() {
        return settingDao;
    }

    public purchaseDao getPurchaseDao() {
        return purchaseDao;
    }

}
